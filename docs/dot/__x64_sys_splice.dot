digraph RGL__DirectedAdjacencyGraph {process_memory[fontsize = 8,label = process_memory,shape = ellipse, fillcolor="#fffacd", style = filled]

process_memory -> process_memory[fontsize = 8,label = terminate_proc]

path[fontsize = 8,label = path,shape = ellipse, fillcolor="#fffacd", style = filled]

path -> process_memory[fontsize = 8,label = named]

machine[fontsize = 8,label = machine,shape = house, fillcolor="#ff8c00", style = filled]

task[fontsize = 8,label = task,shape = rectangle, fillcolor="#e6e6fa", style = filled]

machine -> task[fontsize = 8,label = ran_on]

inode[fontsize = 8,label = inode,shape = ellipse, fillcolor="#fffacd", style = filled]

path -> inode[fontsize = 8,label = named]

process_memory -> task[fontsize = 8,label = memory_read]

task -> inode[fontsize = 8,label = write]

task -> task[fontsize = 8,label = version_activity]

inode -> inode[fontsize = 8,label = version_entity]

inode -> process_memory[fontsize = 8,label = sh_read]

process_memory -> process_memory[fontsize = 8,label = version_entity]

inode -> task[fontsize = 8,label = read]

task -> process_memory[fontsize = 8,label = memory_write]

process_memory -> inode[fontsize = 8,label = sh_write]

inode -> task[fontsize = 8,label = search]

task -> inode[fontsize = 8,label = send]

inode -> task[fontsize = 8,label = receive]

inode -> process_memory[fontsize = 8,label = exec]

inode -> task[fontsize = 8,label = file_sigio]

task -> task[fontsize = 8,label = terminate_task]

}