---------------------------------------
security/provenance/include/memcpy_ss.h
---------------------------------------
total: 0 errors, 0 warnings, 23 lines checked

security/provenance/include/memcpy_ss.h has no obvious style problems and is ready for submission.
-----------------------------------------------
security/provenance/include/provenance_filter.h
-----------------------------------------------
WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#173: FILE: security/provenance/include/provenance_filter.h:173:
+#define declare_filter_list(filter_name, type) \
+	struct filter_name {		       \
+		struct list_head list;	       \
+		struct type filter;	       \
+	};				       \
+	extern struct list_head filter_name;

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#184: FILE: security/provenance/include/provenance_filter.h:184:
+#define declare_filter_whichOP(function_name, type, variable)		\
+	static __always_inline uint8_t function_name(uint32_t variable)	\
+	{								\
+		struct list_head *listentry, *listtmp;			\
+		struct type *tmp;					\
+		list_for_each_safe(listentry, listtmp, &type) {		\
+			tmp = list_entry(listentry, struct type, list);	\
+			if (tmp->filter.variable == variable) {		\
+				return tmp->filter.op; }		\
+		}							\
+		return 0;						\
+	}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#201: FILE: security/provenance/include/provenance_filter.h:201:
+#define declare_filter_delete(function_name, type, variable)		  \
+	static __always_inline uint8_t function_name(struct type *f)	  \
+	{								  \
+		struct list_head *listentry, *listtmp;			  \
+		struct type *tmp;					  \
+		list_for_each_safe(listentry, listtmp, &type) {		  \
+			tmp = list_entry(listentry, struct type, list);	  \
+			if (tmp->filter.variable == f->filter.variable) { \
+				list_del(listentry);			  \
+				kfree(tmp);				  \
+				return 0;				  \
+			}						  \
+		}							  \
+		return 0;						  \
+	}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#221: FILE: security/provenance/include/provenance_filter.h:221:
+#define declare_filter_add_or_update(function_name, type, variable)	  \
+	static __always_inline uint8_t function_name(struct type *f)	  \
+	{								  \
+		struct list_head *listentry, *listtmp;			  \
+		struct type *tmp;					  \
+		list_for_each_safe(listentry, listtmp, &type) {		  \
+			tmp = list_entry(listentry, struct type, list);	  \
+			if (tmp->filter.variable == f->filter.variable) { \
+				tmp->filter.op = f->filter.op;		  \
+				return 0;				  \
+			}						  \
+		}							  \
+		list_add_tail(&(f->list), &type);			  \
+		return 0;						  \
+	}

total: 0 errors, 4 warnings, 319 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/include/provenance_filter.h has style problems, please review.
----------------------------------------
security/provenance/include/provenance.h
----------------------------------------
total: 0 errors, 0 warnings, 298 lines checked

security/provenance/include/provenance.h has no obvious style problems and is ready for submission.
----------------------------------------------
security/provenance/include/provenance_inode.h
----------------------------------------------
WARNING:REPEATED_WORD: Possible repeated word: 'flags'
#433: FILE: security/provenance/include/provenance_inode.h:433:
+ * @param flags Flags passed by LSM hooks.

total: 0 errors, 1 warnings, 604 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/include/provenance_inode.h has style problems, please review.
------------------------------------------------
security/provenance/include/provenance_machine.h
------------------------------------------------
total: 0 errors, 0 warnings, 24 lines checked

security/provenance/include/provenance_machine.h has no obvious style problems and is ready for submission.
--------------------------------------------
security/provenance/include/provenance_net.h
--------------------------------------------
total: 0 errors, 0 warnings, 411 lines checked

security/provenance/include/provenance_net.h has no obvious style problems and is ready for submission.
-------------------------------------------
security/provenance/include/provenance_ns.h
-------------------------------------------
total: 0 errors, 0 warnings, 139 lines checked

security/provenance/include/provenance_ns.h has no obvious style problems and is ready for submission.
-----------------------------------------------
security/provenance/include/provenance_policy.h
-----------------------------------------------
total: 0 errors, 0 warnings, 62 lines checked

security/provenance/include/provenance_policy.h has no obvious style problems and is ready for submission.
----------------------------------------------
security/provenance/include/provenance_query.h
----------------------------------------------
total: 0 errors, 0 warnings, 97 lines checked

security/provenance/include/provenance_query.h has no obvious style problems and is ready for submission.
-----------------------------------------------
security/provenance/include/provenance_record.h
-----------------------------------------------
WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#225: FILE: security/provenance/include/provenance_record.h:225:
+	strlcpy(fname_prov->file_name_info.name, name, PATH_MAX);

total: 0 errors, 1 warnings, 583 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/include/provenance_record.h has style problems, please review.
----------------------------------------------
security/provenance/include/provenance_relay.h
----------------------------------------------
total: 0 errors, 0 warnings, 192 lines checked

security/provenance/include/provenance_relay.h has no obvious style problems and is ready for submission.
---------------------------------------------
security/provenance/include/provenance_task.h
---------------------------------------------
WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#594: FILE: security/provenance/include/provenance_task.h:594:
+	strlcpy(aprov->arg_info.value, arg, PATH_MAX - 1);

total: 0 errors, 1 warnings, 652 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/include/provenance_task.h has style problems, please review.
----------------------------------------------
security/provenance/include/provenance_utils.h
----------------------------------------------
total: 0 errors, 0 warnings, 31 lines checked

security/provenance/include/provenance_utils.h has no obvious style problems and is ready for submission.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
